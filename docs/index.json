{
  "api/LastAssets.ExampleClass.html": {
    "href": "api/LastAssets.ExampleClass.html",
    "title": "Class ExampleClass | Last Assets",
    "keywords": "Class ExampleClass Namespace LastAssets public class ExampleClass Inheritance object ExampleClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExampleMethod2() public void ExampleMethod2() ExampleMethod3() public void ExampleMethod3()"
  },
  "api/LastAssets.LastVirtualKeyboard.Examples.EXAMPLE_InputBinding.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.Examples.EXAMPLE_InputBinding.html",
    "title": "Class EXAMPLE_InputBinding | Last Assets",
    "keywords": "Class EXAMPLE_InputBinding Namespace LastAssets.LastVirtualKeyboard.Examples Example class for connecting Unity's new input system to the keyboard public class EXAMPLE_InputBinding : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EXAMPLE_InputBinding Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields EventSystemRef Reference to a unity eventsystem reference public EventSystem EventSystemRef Field Value EventSystem InputModule Input system generated input class public InputSystem_VirtualKeyboard InputModule Field Value InputSystem_VirtualKeyboard InputSystemUIRef Reference to unity's InputSystemUIRef public InputSystemUIInputModule InputSystemUIRef Field Value InputSystemUIInputModule VirtualKeyboardRef Reference to the virtual keyboard public VirtualKeyboard VirtualKeyboardRef Field Value VirtualKeyboard"
  },
  "api/LastAssets.LastVirtualKeyboard.Examples.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.Examples.html",
    "title": "Namespace LastAssets.LastVirtualKeyboard.Examples | Last Assets",
    "keywords": "Namespace LastAssets.LastVirtualKeyboard.Examples Classes EXAMPLE_InputBinding Example class for connecting Unity's new input system to the keyboard"
  },
  "api/LastAssets.LastVirtualKeyboard.IVirtualKeyboardRaycastTarget.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.IVirtualKeyboardRaycastTarget.html",
    "title": "Interface IVirtualKeyboardRaycastTarget | Last Assets",
    "keywords": "Interface IVirtualKeyboardRaycastTarget Namespace LastAssets.LastVirtualKeyboard Interface for what is raycastable by the virtualkeyboard. It only searches for this interface on hit objects. public interface IVirtualKeyboardRaycastTarget Methods GetKey() VirtualKey GetKey() Returns VirtualKey"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKey.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKey.html",
    "title": "Class VirtualKey | Last Assets",
    "keywords": "Class VirtualKey Namespace LastAssets.LastVirtualKeyboard Virtual keyboard key class, assigned when virtualkeyboardlayout creates the keyboard. Mostly used as an animation layer. public class VirtualKey : MonoBehaviour, IVirtualKeyboardRaycastTarget Inheritance object Object Component Behaviour MonoBehaviour VirtualKey Implements IVirtualKeyboardRaycastTarget Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods VirtualKeyboardUtilities.ApplyKeyPointersToChildren(VirtualKey) Fields Character The primary character of this key public string Character Field Value string DisplaySecondaryKey Whether not to display the primary and secondary key at the same time public bool DisplaySecondaryKey Field Value bool SecondaryCharacter The secondary character for this key public string SecondaryCharacter Field Value string Methods GetGridCoordinates() Returns the grid coordinates relative to the keyboard layout public Vector2 GetGridCoordinates() Returns Vector2 GetKey() Returns the virtualkey object. Part of IVirtualKeyboardRaycastTarget implementation public VirtualKey GetKey() Returns VirtualKey Returns this virtual key GetRectTransformPosition() Returns the local position of this keys rect transform public Vector2 GetRectTransformPosition() Returns Vector2 Initialize(VirtualKeyboardLayout, int, int) Initializes the key and assignes all references. This is where layout reference is assigned and coordinates public void Initialize(VirtualKeyboardLayout layout, int x, int y) Parameters layout VirtualKeyboardLayout The layout this key belongs to x int The x coordinate of this key y int The y coordinate of this key Press() Performs the Press animation for this key public void Press() Select() Perform the Select animation logic public void Select() ToggleSelected(bool) Toggles this key on or off public void ToggleSelected(bool toggledOn) Parameters toggledOn bool On or Off UnSelect() Perform the Unselect animation logic public void UnSelect() UpdateShownKey(bool, bool) Animates the shown key based on the state of capsLock and shift public void UpdateShownKey(bool capsLockPressed, bool shiftPressed) Parameters capsLockPressed bool Whether capslock is toggled shiftPressed bool Whether shift is toggled"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyPointer.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyPointer.html",
    "title": "Class VirtualKeyPointer | Last Assets",
    "keywords": "Class VirtualKeyPointer Namespace LastAssets.LastVirtualKeyboard Pointer class, useful for pointing any raycastable transform to a virtual key public class VirtualKeyPointer : MonoBehaviour, IVirtualKeyboardRaycastTarget Inheritance object Object Component Behaviour MonoBehaviour VirtualKeyPointer Implements IVirtualKeyboardRaycastTarget Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Key Sets the virtual key this object points to public VirtualKey Key { set; } Property Value VirtualKey"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboard.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboard.html",
    "title": "Class VirtualKeyboard | Last Assets",
    "keywords": "Class VirtualKeyboard Namespace LastAssets.LastVirtualKeyboard Main Virtual keyboard class, required for functionality [RequireComponent(typeof(VirtualKeyboardLayout))] public class VirtualKeyboard : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour VirtualKeyboard Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields Layout public VirtualKeyboardLayout Layout Field Value VirtualKeyboardLayout RepeatInputTime public float RepeatInputTime Field Value float Methods CastForKeyWithPointerData(EventSystem, PointerEventData) Returns a VirtualKey under the pointer data position. Returns null if no key was found. public VirtualKey CastForKeyWithPointerData(EventSystem eventSystem, PointerEventData pointerData) Parameters eventSystem EventSystem The referenced eventsystem to use pointerData PointerEventData The pointer data, make sure to set the position! Returns VirtualKey DeselectFocusedKey() If any key is currently selected, perform the unselect method on it public void DeselectFocusedKey() Hide() Sets the object inactive public void Hide() IsOpen() Returns true or false depending on if the object is active or inactive public bool IsOpen() Returns bool OnCursorUpdated(EventSystem, PointerEventData) Perform a cursor update, will cause hovering effect when over selected keys public void OnCursorUpdated(EventSystem eventSystem, PointerEventData pointerData) Parameters eventSystem EventSystem The event system to read from pointerData PointerEventData The data representing the simulated cursor. Make sure to assign its position! OnNavigation(Vector2, bool) Perform Up/Down/Left/Right movement relative to currently selected key public void OnNavigation(Vector2 direction, bool performImmediately) Parameters direction Vector2 The Up/Down/Left/Right relative to the currently selected key performImmediately bool Whether not to perform the movement immediately PlayHoveredSound() Force play a snippet of the layouts Hovered sound public void PlayHoveredSound() PlaySelectedSound() Force play a snippet of the layouts Selected sound public void PlaySelectedSound() PressKey(string) Performs a press on the target string public void PressKey(string toPress) Parameters toPress string The string representing the key to press ReadKey() Reads the currently selected virtual key and returns the string the key represents public string ReadKey() Returns string Show() Sets the object active public void Show() ToggleCapsLock() State Toggle for CapsLock public void ToggleCapsLock() ToggleShift() State Toggle for Shift public void ToggleShift()"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.AdditiveKeyIcon.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.AdditiveKeyIcon.html",
    "title": "Struct VirtualKeyboardLayout.AdditiveKeyIcon | Last Assets",
    "keywords": "Struct VirtualKeyboardLayout.AdditiveKeyIcon Namespace LastAssets.LastVirtualKeyboard Additional information to be passed into the creation of a keyboarditem. Can be text or an image [Serializable] public struct VirtualKeyboardLayout.AdditiveKeyIcon Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Icon public Sprite Icon Field Value Sprite KeyRoundedness public float KeyRoundedness Field Value float KeyTileMode public Image.Type KeyTileMode Field Value Image.Type LocalScale public Vector3 LocalScale Field Value Vector3 PositionOffset public Vector2 PositionOffset Field Value Vector2 UIAnchor public VirtualKeyboardUtilities.UIAnchor UIAnchor Field Value VirtualKeyboardUtilities.UIAnchor UseTextColor public bool UseTextColor Field Value bool"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardItem.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardItem.html",
    "title": "Struct VirtualKeyboardLayout.KeyboardItem | Last Assets",
    "keywords": "Struct VirtualKeyboardLayout.KeyboardItem Namespace LastAssets.LastVirtualKeyboard An item that will show up on the keyboard [Serializable] public struct VirtualKeyboardLayout.KeyboardItem Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AdditiveIcon public VirtualKeyboardLayout.AdditiveKeyIcon AdditiveIcon Field Value VirtualKeyboardLayout.AdditiveKeyIcon CellWidthMultiplier public float CellWidthMultiplier Field Value float DisplaySecondaryKey public bool DisplaySecondaryKey Field Value bool Key public string Key Field Value string SecondaryKey public string SecondaryKey Field Value string UseAdditiveIcon public bool UseAdditiveIcon Field Value bool"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardLayout.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardLayout.html",
    "title": "Class VirtualKeyboardLayout.KeyboardLayout | Last Assets",
    "keywords": "Class VirtualKeyboardLayout.KeyboardLayout Namespace LastAssets.LastVirtualKeyboard Main components to the keyboard, customization can be done here [Serializable] public class VirtualKeyboardLayout.KeyboardLayout Inheritance object VirtualKeyboardLayout.KeyboardLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllRows [Header(\"Customize the Keys!\")] public List<VirtualKeyboardLayout.KeyboardRow> AllRows Field Value List<VirtualKeyboardLayout.KeyboardRow> AudioSource [Header(\"Audio\")] public AudioSource AudioSource Field Value AudioSource BackgroundColor [Header(\"Colors\")] public Color BackgroundColor Field Value Color ExternalPadding public float ExternalPadding Field Value float Font [Header(\"Text\")] public TMP_FontAsset Font Field Value TMP_FontAsset FontStyle public FontStyles FontStyle Field Value FontStyles HighlightTransitionTime public float HighlightTransitionTime Field Value float HighlightedColor public Color HighlightedColor Field Value Color HoveredKeyClip public AudioClip HoveredKeyClip Field Value AudioClip KeyColor public Color KeyColor Field Value Color KeyFocusTransitionTime [Header(\"Animation Timing\")] public float KeyFocusTransitionTime Field Value float KeyImage public Sprite KeyImage Field Value Sprite KeyPadding [Header(\"Padding\")] public float KeyPadding Field Value float KeyRoundedness public float KeyRoundedness Field Value float KeyTileMode public Image.Type KeyTileMode Field Value Image.Type KeyboardImage [Header(\"Keyboard Styling\")] public Sprite KeyboardImage Field Value Sprite NavigationWrapAroundHorizontal [Header(\"Navigation Wrapping\")] public bool NavigationWrapAroundHorizontal Field Value bool NavigationWrapAroundVertical public bool NavigationWrapAroundVertical Field Value bool PressAnimationTime public float PressAnimationTime Field Value float PressColor public Color PressColor Field Value Color SecondaryTextColor public Color SecondaryTextColor Field Value Color SelectedKeyClip public AudioClip SelectedKeyClip Field Value AudioClip StackedTextScale public float StackedTextScale Field Value float TextColor public Color TextColor Field Value Color TextScale public float TextScale Field Value float ToggledButtonColor public Color ToggledButtonColor Field Value Color"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardRow.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.KeyboardRow.html",
    "title": "Class VirtualKeyboardLayout.KeyboardRow | Last Assets",
    "keywords": "Class VirtualKeyboardLayout.KeyboardRow Namespace LastAssets.LastVirtualKeyboard Keyboard row, holds a list of KeyboardItems that get aligned horizontally [Serializable] public class VirtualKeyboardLayout.KeyboardRow Inheritance object VirtualKeyboardLayout.KeyboardRow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Keys public List<VirtualKeyboardLayout.KeyboardItem> Keys Field Value List<VirtualKeyboardLayout.KeyboardItem>"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.VirtualHotkey.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.VirtualHotkey.html",
    "title": "Struct VirtualKeyboardLayout.VirtualHotkey | Last Assets",
    "keywords": "Struct VirtualKeyboardLayout.VirtualHotkey Namespace LastAssets.LastVirtualKeyboard Binds an inputsystem action to a key result [Serializable] public struct VirtualKeyboardLayout.VirtualHotkey Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ActionToBind public InputActionReference ActionToBind Field Value InputActionReference Key public string Key Field Value string"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardLayout.html",
    "title": "Class VirtualKeyboardLayout | Last Assets",
    "keywords": "Class VirtualKeyboardLayout Namespace LastAssets.LastVirtualKeyboard Layout component that creates and adjusts the virtual keyboard. This is a required component [ExecuteInEditMode] [RequireComponent(typeof(RectTransform))] public class VirtualKeyboardLayout : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour VirtualKeyboardLayout Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields ForceRecreateKeyboard Used to force the layout system to recreate the keyboard [HideInInspector] public bool ForceRecreateKeyboard Field Value bool KeyInstances [Header(\"Debugging\")] public List<VirtualKey> KeyInstances Field Value List<VirtualKey> Layout [Header(\"Keyboard\")] public VirtualKeyboardLayout.KeyboardLayout Layout Field Value VirtualKeyboardLayout.KeyboardLayout Properties RectTransform A pointer to the rect transform of this transform object public RectTransform RectTransform { get; } Property Value RectTransform Methods GetRandomKey() Returns a random key, somewhere on the keyboard public VirtualKey GetRandomKey() Returns VirtualKey Move(VirtualKey, Vector2) Performs a move in direction relative to inputted key. public VirtualKey Move(VirtualKey referenceKey, Vector2 direction) Parameters referenceKey VirtualKey The key to move from direction Vector2 The direction to move to Returns VirtualKey ToggleKeysOfType(bool, string) Searches for keys that match the character, if they are found they are set to the toggle state public void ToggleKeysOfType(bool isToggled, string character) Parameters isToggled bool Whether its toggled on or not character string The character we want to search for UpdateKeysWithState(bool, bool) Updates the keys given the state of caps lock and shift public void UpdateKeysWithState(bool capsLockPressed, bool shiftPressed) Parameters capsLockPressed bool Is the keyboards capslock pressed shiftPressed bool Is the keyboards shift pressed UpdateLayout() Recreates the keyboard layout. High impact on performance, so call this only when necessary! public void UpdateLayout()"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardUtilities.UIAnchor.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardUtilities.UIAnchor.html",
    "title": "Enum VirtualKeyboardUtilities.UIAnchor | Last Assets",
    "keywords": "Enum VirtualKeyboardUtilities.UIAnchor Namespace LastAssets.LastVirtualKeyboard Repesents a Vector2 pivot point used in UnityEngines UI RectTransform public enum VirtualKeyboardUtilities.UIAnchor Fields LowerCenter = 7 LowerLeft = 6 LowerRight = 8 MiddleCenter = 4 MiddleLeft = 3 MiddleRight = 5 UpperCenter = 1 UpperLeft = 0 UpperRight = 2"
  },
  "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardUtilities.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.VirtualKeyboardUtilities.html",
    "title": "Class VirtualKeyboardUtilities | Last Assets",
    "keywords": "Class VirtualKeyboardUtilities Namespace LastAssets.LastVirtualKeyboard VirtualKeyboard Utility class public static class VirtualKeyboardUtilities Inheritance object VirtualKeyboardUtilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyKeyPointersToChildren(VirtualKey) Applies the VirtualKey component to every child of the target public static void ApplyKeyPointersToChildren(this VirtualKey target) Parameters target VirtualKey TranslateUIAnchorToPivot(UIAnchor) Converts the enum UIAnchor to a Vector2 pivot point used in the unity UI system public static Vector2 TranslateUIAnchorToPivot(VirtualKeyboardUtilities.UIAnchor anchor) Parameters anchor VirtualKeyboardUtilities.UIAnchor Returns Vector2"
  },
  "api/LastAssets.LastVirtualKeyboard.html": {
    "href": "api/LastAssets.LastVirtualKeyboard.html",
    "title": "Namespace LastAssets.LastVirtualKeyboard | Last Assets",
    "keywords": "Namespace LastAssets.LastVirtualKeyboard Classes VirtualKey Virtual keyboard key class, assigned when virtualkeyboardlayout creates the keyboard. Mostly used as an animation layer. VirtualKeyPointer Pointer class, useful for pointing any raycastable transform to a virtual key VirtualKeyboard Main Virtual keyboard class, required for functionality VirtualKeyboardLayout Layout component that creates and adjusts the virtual keyboard. This is a required component VirtualKeyboardLayout.KeyboardLayout Main components to the keyboard, customization can be done here VirtualKeyboardLayout.KeyboardRow Keyboard row, holds a list of KeyboardItems that get aligned horizontally VirtualKeyboardUtilities VirtualKeyboard Utility class Structs VirtualKeyboardLayout.AdditiveKeyIcon Additional information to be passed into the creation of a keyboarditem. Can be text or an image VirtualKeyboardLayout.KeyboardItem An item that will show up on the keyboard VirtualKeyboardLayout.VirtualHotkey Binds an inputsystem action to a key result Interfaces IVirtualKeyboardRaycastTarget Interface for what is raycastable by the virtualkeyboard. It only searches for this interface on hit objects. Enums VirtualKeyboardUtilities.UIAnchor Repesents a Vector2 pivot point used in UnityEngines UI RectTransform"
  },
  "api/LastAssets.html": {
    "href": "api/LastAssets.html",
    "title": "Namespace LastAssets | Last Assets",
    "keywords": "Namespace LastAssets Classes ExampleClass"
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "keywords": ""
  },
  "manual/getting-started.html": {
    "href": "manual/getting-started.html",
    "title": "Importing into project | Last Assets",
    "keywords": "Importing into project Once you've purchased the asset, open your project, and then open Window/Packagemanager. Make sure youre logged in, and navigate to My Assets. Search for Last Virtual Keyboard. You need to download and press import. You should be given options for what to import from the package. Core is necessary for functionality, and Examples have integrations that are worth looking into. Note One of the examples in the package relies on the new input system, so please follow the earlier procedure for downloading the Input System package from the Unity Registry under package manager."
  },
  "manual/introduction.html": {
    "href": "manual/introduction.html",
    "title": "Introduction | Last Assets",
    "keywords": "Introduction Welcome and thank you for purchasing Last Virtual keyboard! This manual should lead you through the steps of setting up a virtual keyboard for your specific project. If you're looking for the API reference, it can be found Here Note If you have any issues, please feel free to contact me at lastassetscontact@gmail.com. For better support, join the discord server at https://discord.gg/jcuhesB939"
  },
  "manual/using.html": {
    "href": "manual/using.html",
    "title": "Recommendations | Last Assets",
    "keywords": "Recommendations For the best usage example, I HIGHLY recommend you import the examples folder and study the provided demo. This provides an example script for connecting unity's new input system to the keyboard instance. This includes an example for custom key logic based on the string, as well as shortcuts to perform actions without interacting directly with a key. Adding the components First step is to add the Keyboard component to a gameobject. This should automatically add the KeyboardLayout dependency, but if it doesn't, add this component to the object as well. Customization The keyboard is fairly cusomizable, simply change the fields under Layout on the keyboardlayout component. This should give you options for colors, icons, etc. While you're here, populate the Keys array to start filling out your keyboard. Errors You may see errors in console after adding the script to an object. This is due to dependencies that need to be assigned such as the audiosource and font. As you start filling out the references, these object reference errors should go away. Using the keyboard Depending on which input system you're using, you can interact with the virtual keyboard by creating a reference to the VirtualKeyboard and utilizing these functions: Show() - This method enables the keyboard object for use on screen Hide() - This method disables/hides the keyboard object IsOpen() - Returns true or false if the keyboard is open or closed ReadKey() - \"Presses\" whatever key is highlighted under the virtual keyboard and returns the string Note For an implementation example, import the Examples folder, and open the Demo_NewInputSystem Scene. This should show you all the information you need to get your own keyboard going."
  }
}